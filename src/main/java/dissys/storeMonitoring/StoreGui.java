package dissys.storeMonitoring;


import grpc.generated.monitoring.MonitoringRequest;
import grpc.generated.monitoring.MonitoringResponse;
import io.grpc.StatusRuntimeException;
import io.grpc.stub.StreamObserver;
import java.io.IOException;
import java.util.ArrayList;
import java.util.concurrent.TimeUnit;
import java.util.logging.Level;
import java.util.logging.Logger;

/**
 *
 * @author Tsogzolmaa;
 */
public class StoreGui extends javax.swing.JFrame {

    /**
     * Creates new form StoreGui
     */
    public StoreGui() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        SectionNameLabel = new javax.swing.JLabel();
        StartButton = new javax.swing.JButton();
        SectionNameTextField = new javax.swing.JTextField();
        EnterButton = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        serviceTextArea = new javax.swing.JTextArea();
        ResultLabel = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        SectionNameLabel.setText("Enter store section name to monitor");

        StartButton.setText("START");
        StartButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartButtonActionPerformed(evt);
            }
        });

        SectionNameTextField.setText(" ");
        SectionNameTextField.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                SectionNameTextFieldActionPerformed(evt);
            }
        });

        EnterButton.setText("ENTER");
        EnterButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                EnterButtonActionPerformed(evt);
            }
        });

        serviceTextArea.setColumns(20);
        serviceTextArea.setRows(5);
        jScrollPane1.setViewportView(serviceTextArea);

        ResultLabel.setText("Result");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(69, 69, 69)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(ResultLabel)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 492, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(SectionNameLabel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(SectionNameTextField))
                        .addGap(23, 23, 23)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(StartButton)
                            .addComponent(EnterButton))))
                .addContainerGap(82, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addComponent(StartButton)
                .addGap(58, 58, 58)
                .addComponent(SectionNameLabel)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(SectionNameTextField, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(EnterButton))
                .addGap(62, 62, 62)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 174, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(ResultLabel)
                .addContainerGap(22, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void StartButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartButtonActionPerformed
        //Starting new thread in the background to allow GUI performance.
        Thread serverThread = new Thread(new Runnable(){
            @Override
            public void run(){
            new StoreMonitoringServer().startServer();
            }
        });
        serverThread.start();
        serviceTextArea.setText("Server started.");
        //waiting briefly until server ready
        try {
            Thread.sleep(1000);
        } catch (InterruptedException ex) {
            Logger.getLogger(StoreGui.class.getName()).log(Level.SEVERE, null, ex);
        }

        serviceTextArea.append("\nDiscovering service...");
        try {
            //discover service from client
            StoreMonitoringClient.discoverAndStart(serviceTextArea);
            //serviceTextArea.setText(ChoreClient.message);
        } catch (IOException ex) {
            Logger.getLogger(StoreGui.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InterruptedException ex) {
            Logger.getLogger(StoreGui.class.getName()).log(Level.SEVERE, null, ex);
        }
        
        
        
        
    }//GEN-LAST:event_StartButtonActionPerformed

    private void SectionNameTextFieldActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_SectionNameTextFieldActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_SectionNameTextFieldActionPerformed

    private void EnterButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_EnterButtonActionPerformed
        
        String sectionName = SectionNameTextField.getText().trim();
        serviceTextArea.setText("" );
    try{
        MonitoringRequest request = MonitoringRequest
                .newBuilder().setSectionName(sectionName).build();
        
        StreamObserver<MonitoringResponse> responseObserver= new StreamObserver<MonitoringResponse>(){
            
            ArrayList<String> responseArray = new ArrayList<>();
            @Override
            public void onNext(MonitoringResponse v) {
                serviceTextArea.append("Response from server " );
                serviceTextArea.append(v.getStockLevelMessage());
                responseArray.add(v.getStockLevelMessage());
            }

            @Override
            public void onError(Throwable thrwbl) {
                serviceTextArea.setText("Error occurred during stream: " + thrwbl.getMessage());
                thrwbl.printStackTrace();             }

            @Override
            public void onCompleted() {
                serviceTextArea.append("\nServer response(s) completed");
                serviceTextArea.append("\nRecieved response(s) : " + responseArray.toString());
            }

        };
        
        StoreMonitoringClient.stubAsync.doMonitoring(request, responseObserver);
        
        }catch (StatusRuntimeException e) {
            e.getStatus();
        } finally {
            try {
                StoreMonitoringClient.channel.shutdown().awaitTermination(5, TimeUnit.SECONDS);
            } catch (InterruptedException ex) {
                Logger.getLogger(StoreGui.class.getName()).log(Level.SEVERE, null, ex);
            }
        }
        
        
        
        
        
    }//GEN-LAST:event_EnterButtonActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(StoreGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(StoreGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(StoreGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(StoreGui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new StoreGui().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton EnterButton;
    private javax.swing.JLabel ResultLabel;
    private javax.swing.JLabel SectionNameLabel;
    private javax.swing.JTextField SectionNameTextField;
    private javax.swing.JButton StartButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextArea serviceTextArea;
    // End of variables declaration//GEN-END:variables
}
